# Copyright 2019 The OpenTracing Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

dist: trusty
language: java
cache:
  directories:
  - ~/.m2
before_install:
- 'mvn -version &&
   export BUILD_PATH="$HOME/.m2/build/$TRAVIS_BUILD_ID" && mkdir -p $BUILD_PATH &&
   export MAVEN_OPTS="-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" &&
   export PURGE_EXCLUDE="io.opentracing.contrib.specialagent:opentracing-specialagent-util,io.opentracing.contrib.specialagent:opentracing-adapter" &&
   cp settings.xml $HOME/.m2/settings.xml;'
sudo: required
stages:
- install
- test
- deploy
jobs:
  include:
  - stage: install
    jdk: openjdk8
    install: rm -rf $BUILD_PATH ~/.m2/repository/io/opentracing/contrib/specialagent
    script:
    - 'if [ "$TRAVIS_BRANCH" = "master" ] &&
          [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
 bash -c "(mvn -B -P test --fail-at-end -Dsilent dependency:go-offline || true) && mvn -e -B -P report install || (rm -rf ~/.m2/repository/* && false)" &&
 mvn -e -B -DrepoToken=$REPO_TOKEN coveralls:report &&
 mvn -e -B -Dassemble install;
      else
 bash -c "(mvn -B -P test --fail-at-end -Dsilent dependency:go-offline || true) && mvn -e -B install || (rm -rf ~/.m2/repository/* && false)" &&
 mvn -e -B -Dassemble install;
      fi'
    before_cache: find . -name target -exec rsync -R -r '{}' $BUILD_PATH \;
  - stage: install
    jdk: openjdk11
    install: rm -rf $BUILD_PATH ~/.m2/repository/io/opentracing/contrib/specialagent
    script:
    - ' bash -c "(mvn -e -B -P test --fail-at-end -Dsilent dependency:go-offline || true) && mvn -e -B install || (rm -rf ~/.m2/repository/* && false)" &&
 mvn -e -B -Dassemble install;'
    before_cache: find . -name target -exec rsync -R -r '{}' $BUILD_PATH \;
  - stage: deploy
    jdk: openjdk8
    install: rsync -r $BUILD_PATH/ .
    script:
    - 'if [ "$TRAVIS_BRANCH" = "master" ] &&
          [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
        eval "$SIGNING_KEY" &> /dev/null &&
 mvn -e -B -Dassemble -P deploy deploy;
      fi'
  - name: "Akka Actor [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/akka-actor -amd integration-test || (mvn -e -B -P test -pl test/akka-actor -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Akka Actor [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/akka-actor -amd integration-test || (mvn -e -B -P test -pl test/akka-actor -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Akka Http [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/akka-http -amd integration-test || (mvn -e -B -P test -pl test/akka-http -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Akka Http [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/akka-http -amd integration-test || (mvn -e -B -P test -pl test/akka-http -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Apache CXF [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/cxf -amd integration-test || (mvn -e -B -P test -pl test/cxf -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Apache CXF [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/cxf -amd integration-test || (mvn -e -B -P test -pl test/cxf -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Apache HttpClient [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/apache-httpclient -amd integration-test || (mvn -e -B -P test -pl test/apache-httpclient -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Apache HttpClient [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/apache-httpclient -amd integration-test || (mvn -e -B -P test -pl test/apache-httpclient -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Apache Thrift [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/thrift -amd integration-test || (mvn -e -B -P test -pl test/thrift -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Apache Thrift [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/thrift -amd integration-test || (mvn -e -B -P test -pl test/thrift -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "AsyncHttpClient [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/asynchttpclient -amd integration-test || (mvn -e -B -P test -pl test/asynchttpclient -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "AsyncHttpClient [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/asynchttpclient -amd integration-test || (mvn -e -B -P test -pl test/asynchttpclient -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "AWS SDK [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/aws-sdk -amd integration-test || (mvn -e -B -P test -pl test/aws-sdk -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "AWS SDK [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/aws-sdk -amd integration-test || (mvn -e -B -P test -pl test/aws-sdk -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Cassandra Driver [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/cassandra-driver -amd integration-test || (mvn -e -B -P test -pl test/cassandra-driver -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
#  - name: "Cassandra Driver [openjdk11]" # This is commented out, because Cassandra does not run ok jdk11
#    stage: test
#    jdk: openjdk11
#    install: true
#    script: travis_retry bash -c "mvn -e -B -P test -pl test/cassandra-driver -amd integration-test || (mvn -e -B -P test -pl test/cassandra-driver -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Couchbase Client [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/couchbase-client -amd integration-test || (mvn -e -B -P test -pl test/couchbase-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Couchbase Client [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/couchbase-client -amd integration-test || (mvn -e -B -P test -pl test/couchbase-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Dubbo [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/dubbo -amd integration-test || (mvn -e -B -P test -pl test/dubbo -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Dubbo [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/dubbo -amd integration-test || (mvn -e -B -P test -pl test/dubbo -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Dynamic [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/dynamic -amd integration-test || (mvn -e -B -P test -pl test/dynamic -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Dynamic [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/dynamic -amd integration-test || (mvn -e -B -P test -pl test/dynamic -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Elasticsearch Client [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/elasticsearch-client -amd integration-test || (mvn -e -B -P test -pl test/elasticsearch-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Elasticsearch Client [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/elasticsearch-client -amd integration-test || (mvn -e -B -P test -pl test/elasticsearch-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Feign [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/feign -amd integration-test || (mvn -e -B -P test -pl test/feign -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Feign [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/feign -amd integration-test || (mvn -e -B -P test -pl test/feign -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Google Http Client [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/google-http-client -amd integration-test || (mvn -e -B -P test -pl test/google-http-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Google Http Client [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/google-http-client -amd integration-test || (mvn -e -B -P test -pl test/google-http-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Grizzly Http Client [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/grizzly-http-client -amd integration-test || (mvn -e -B -P test -pl test/grizzly-http-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Grizzly Http Client [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/grizzly-http-client -amd integration-test || (mvn -e -B -P test -pl test/grizzly-http-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Grizzly Http Server [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/grizzly-http-server -amd integration-test || (mvn -e -B -P test -pl test/grizzly-http-server -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Grizzly Http Server [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/grizzly-http-server -amd integration-test || (mvn -e -B -P test -pl test/grizzly-http-server -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "gRPC [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/grpc -amd integration-test || (mvn -e -B -P test -pl test/grpc -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "gRPC [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/grpc -amd integration-test || (mvn -e -B -P test -pl test/grpc -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Hazelcast [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/hazelcast -amd integration-test || (mvn -e -B -P test -pl test/hazelcast -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Hazelcast [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/hazelcast -amd integration-test || (mvn -e -B -P test -pl test/hazelcast -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "HttpURLConnection [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/httpurlconnection -amd integration-test || (mvn -e -B -P test -pl test/httpurlconnection -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "HttpURLConnection [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/httpurlconnection -amd integration-test || (mvn -e -B -P test -pl test/httpurlconnection -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Hystrix [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/hystrix -amd integration-test || (mvn -e -B -P test -pl test/hystrix -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Hystrix [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/hystrix -amd integration-test || (mvn -e -B -P test -pl test/hystrix -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Java Concurrent API [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/concurrent -amd integration-test || (mvn -e -B -P test -pl test/concurrent -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Java Concurrent API [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/concurrent -amd integration-test || (mvn -e -B -P test -pl test/concurrent -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Java JDBC API [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/jdbc -amd integration-test || (mvn -e -B -P test -pl test/jdbc -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Java JDBC API [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/jdbc -amd integration-test || (mvn -e -B -P test -pl test/jdbc -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "JDBI [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/jdbi -amd integration-test || (mvn -e -B -P test -pl test/jdbi -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "JDBI [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/jdbi -amd integration-test || (mvn -e -B -P test -pl test/jdbi -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Java JMS [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/jms -amd integration-test || (mvn -e -B -P test -pl test/jms -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Java JMS [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/jms -amd integration-test || (mvn -e -B -P test -pl test/jms -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Java Servlet API: Jetty [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/servlet-jetty -amd integration-test || (mvn -e -B -P test -pl test/servlet-jetty -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Java Servlet API: Jetty [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/servlet-jetty -amd integration-test || (mvn -e -B -P test -pl test/servlet-jetty -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Java Servlet API: Tomcat [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/servlet-tomcat -amd integration-test || (mvn -e -B -P test -pl test/servlet-tomcat -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Java Servlet API: Tomcat [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/servlet-tomcat -amd integration-test || (mvn -e -B -P test -pl test/servlet-tomcat -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "JAX-RS Client [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/jaxrs -amd integration-test || (mvn -e -B -P test -pl test/jaxrs -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "JAX-RS Client [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/jaxrs -amd integration-test || (mvn -e -B -P test -pl test/jaxrs -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Jedis [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/jedis -amd integration-test || (mvn -e -B -P test -pl test/jedis -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Jedis [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/jedis -amd integration-test || (mvn -e -B -P test -pl test/jedis -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Kafka Client [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/kafka-client -amd integration-test || (mvn -e -B -P test -pl test/kafka-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Kafka Client [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/kafka-client -amd integration-test || (mvn -e -B -P test -pl test/kafka-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Kafka Streams [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/kafka-streams -amd integration-test || (mvn -e -B -P test -pl test/kafka-streams -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Kafka Streams [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/kafka-streams -amd integration-test || (mvn -e -B -P test -pl test/kafka-streams -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Lettuce [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/lettuce -amd integration-test || (mvn -e -B -P test -pl test/lettuce -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Lettuce [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/lettuce -amd integration-test || (mvn -e -B -P test -pl test/lettuce -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "MongoDB Driver [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/mongo-driver -amd integration-test || (mvn -e -B -P test -pl test/mongo-driver -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "MongoDB Driver [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/mongo-driver-async -amd integration-test || (mvn -e -B -P test -pl test/mongo-driver-async -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "MongoDB Driver Async [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/mongo-driver-async -amd integration-test || (mvn -e -B -P test -pl test/mongo-driver-async -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "MongoDB Driver Async [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/mongo-driver-reactive -amd integration-test || (mvn -e -B -P test -pl test/mongo-driver-reactive -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "MongoDB Driver Reactive Streams [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/mongo-driver-reactive -amd integration-test || (mvn -e -B -P test -pl test/mongo-driver-reactive -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "MongoDB Driver Reactive Streams [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/mongo-driver -amd integration-test || (mvn -e -B -P test -pl test/mongo-driver -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Mule 4 [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/mule -amd integration-test || (mvn -e -B -P test -pl test/mule -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Mule 4 [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/mule -amd integration-test || (mvn -e -B -P test -pl test/mule -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Neo4j Driver [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/neo4j-driver -amd integration-test || (mvn -e -B -P test -pl test/neo4j-driver -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Neo4j Driver [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/neo4j-driver -amd integration-test || (mvn -e -B -P test -pl test/neo4j-driver -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Netflix Zuul [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/zuul -amd integration-test || (mvn -e -B -P test -pl test/zuul -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Netflix Zuul [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/zuul -amd integration-test || (mvn -e -B -P test -pl test/zuul -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Netty [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/netty -amd integration-test || (mvn -e -B -P test -pl test/netty -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Netty [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/netty -amd integration-test || (mvn -e -B -P test -pl test/netty -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "OkHttp [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/okhttp -amd integration-test || (mvn -e -B -P test -pl test/okhttp -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "OkHttp [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/okhttp -amd integration-test || (mvn -e -B -P test -pl test/okhttp -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Play [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/play -amd integration-test || (mvn -e -B -P test -pl test/play -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Play [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/play -amd integration-test || (mvn -e -B -P test -pl test/play -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Play WS [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/play-ws -amd integration-test || (mvn -e -B -P test -pl test/play-ws -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Play WS [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/play-ws -amd integration-test || (mvn -e -B -P test -pl test/play-ws -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Pulsar Client [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/pulsar-client -amd integration-test || (mvn -e -B -P test -pl test/pulsar-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
#  - name: "Pulsar Client [openjdk11]" # This is commented out, because Pulsar does not run ok jdk11
#    stage: test
#    jdk: openjdk11
#    install: true
#    script: travis_retry bash -c "mvn -e -B -P test -pl test/pulsar-client -amd integration-test || (mvn -e -B -P test -pl test/pulsar-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Pulsar Functions [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/pulsar-functions -amd integration-test || (mvn -e -B -P test -pl test/pulsar-functions -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
#  - name: "Pulsar Functions [openjdk11]" # This is commented out, because Pulsar does not run ok jdk11
#    stage: test
#    jdk: openjdk11
#    install: true
#    script: travis_retry bash -c "mvn -e -B -P test -pl test/pulsar-functions -amd integration-test || (mvn -e -B -P test -pl test/pulsar-functions -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "RabbitMQ Client [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/rabbitmq-client -amd integration-test || (mvn -e -B -P test -pl test/rabbitmq-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "RabbitMQ Client [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/rabbitmq-client -amd integration-test || (mvn -e -B -P test -pl test/rabbitmq-client -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Ratpack [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/ratpack -amd integration-test || (mvn -e -B -P test -pl test/ratpack -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Ratpack [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/ratpack -amd integration-test || (mvn -e -B -P test -pl test/ratpack -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Reactor [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/reactor -amd integration-test || (mvn -e -B -P test -pl test/reactor -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Reactor [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/reactor -amd integration-test || (mvn -e -B -P test -pl test/reactor -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Redisson [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/redisson -amd integration-test || (mvn -e -B -P test -pl test/redisson -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Redisson [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/redisson -amd integration-test || (mvn -e -B -P test -pl test/redisson -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Rewrite [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/rewrite -amd integration-test || (mvn -e -B -P test -pl test/rewrite -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Rewrite [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/rewrite -amd integration-test || (mvn -e -B -P test -pl test/rewrite -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "RxJava [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/rxjava -amd integration-test || (mvn -e -B -P test -pl test/rxjava -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "RxJava [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/rxjava -amd integration-test || (mvn -e -B -P test -pl test/rxjava -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "SparkJava [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/sparkjava -amd integration-test || (mvn -e -B -P test -pl test/sparkjava -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "SparkJava [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/sparkjava -amd integration-test || (mvn -e -B -P test -pl test/sparkjava -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Boot [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-boot -amd integration-test || (mvn -e -B -P test -pl test/spring-boot -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Boot [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-boot -amd integration-test || (mvn -e -B -P test -pl test/spring-boot -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Data [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-data -amd integration-test || (mvn -e -B -P test -pl test/spring-data -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Data [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-data -amd integration-test || (mvn -e -B -P test -pl test/spring-data -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring JMS [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-jms -amd integration-test || (mvn -e -B -P test -pl test/spring-jms -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring JMS [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-jms -amd integration-test || (mvn -e -B -P test -pl test/spring-jms -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Kafka [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-kafka -amd integration-test || (mvn -e -B -P test -pl test/spring-kafka -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Kafka [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-kafka -amd integration-test || (mvn -e -B -P test -pl test/spring-kafka -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Messaging [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-messaging -amd integration-test || (mvn -e -B -P test -pl test/spring-messaging -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Messaging [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-messaging -amd integration-test || (mvn -e -B -P test -pl test/spring-messaging -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring RabbitMQ [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-rabbitmq -amd integration-test || (mvn -e -B -P test -pl test/spring-rabbitmq -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring RabbitMQ [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-rabbitmq -amd integration-test || (mvn -e -B -P test -pl test/spring-rabbitmq -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Scheduling [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-scheduling -amd integration-test || (mvn -e -B -P test -pl test/spring-scheduling -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Scheduling [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-scheduling -amd integration-test || (mvn -e -B -P test -pl test/spring-scheduling -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Web [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-web -amd integration-test || (mvn -e -B -P test -pl test/spring-web -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Web [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-web -amd integration-test || (mvn -e -B -P test -pl test/spring-web -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Web MVC [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-webmvc -amd integration-test || (mvn -e -B -P test -pl test/spring-webmvc -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring Web MVC [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-webmvc -amd integration-test || (mvn -e -B -P test -pl test/spring-webmvc -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring WebFlux [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-webflux -amd integration-test || (mvn -e -B -P test -pl test/spring-webflux -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring WebFlux [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-webflux -amd integration-test || (mvn -e -B -P test -pl test/spring-webflux -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring WebSocket [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-websocket -amd integration-test || (mvn -e -B -P test -pl test/spring-websocket -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spring WebSocket [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spring-websocket -amd integration-test || (mvn -e -B -P test -pl test/spring-websocket -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spymemcached [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spymemcached -amd integration-test || (mvn -e -B -P test -pl test/spymemcached -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Spymemcached [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/spymemcached -amd integration-test || (mvn -e -B -P test -pl test/spymemcached -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Twilio [openjdk8]"
    stage: test
    jdk: openjdk8
    install: true
    script: bash -c "mvn -e -B -P test -pl test/twilio -amd integration-test || (mvn -e -B -P test -pl test/twilio -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
  - name: "Twilio [openjdk11]"
    stage: test
    jdk: openjdk11
    install: true
    script: bash -c "mvn -e -B -P test -pl test/twilio -amd integration-test || (mvn -e -B -P test -pl test/twilio -amd -Dexclude=$PURGE_EXCLUDE dependency:purge-local-repository && false)"
env:
  global:
  - SECRET=VTJGc2RHVmtYMS9zZ2lkRDBxWCt4eThCM3cyOGpCeThYMjY5cnprK1hpSGVhZGY3cG02c24rV1VJM1l4cVB5WgpNdHNwTEtlMzlWcStpWVFWTVFZWkFkZ1ptWVYwa25PK1BZeXV2VUxWQUNpU3hleHNXL1BTVkNJRkFZeDlzK05JClMrVnNkNjl0SWRNZE1ubjRIdGtHeFRkSWsyTXZmYkQ0MmtoTXRTclZLUzRkT1JILzdPVzNadXJvK3R1akJDSWIKS29VVXhYZlRnVWdDSkk2alBoanBQejhlQW5lc28vaUl1T0c0OXhmVlVKeGk5NXR3MEY3eStndFpqUy9kczBQQQp6SjlVMmJzdTVwRlZjRWN6T1g4WmJacG9IWlh2RUF4a000NkRyWUpBT1RhQTRmQXFiZ2NYRFRRM1hBVU9JcFpWCnBnTnlLc3dwWExvMTdyZDBIbTArV3JoUDJDODVhVU80a2prQTJ4QVkzdDBMOUFHYzkweEpkM0lsck9pUUl6NDcKcDdPdFZkaERYOEgxbkNmUm1xaXFxNDFLb3FvMGRDOVlEaDRPZE1lN3p2NlVlUWFYbktaRWJOTUNBeVFYdER3SAo2TWFlWEZlZW9EZ2NGUFN4NStSMUNaUG9JUGx4c3JQMk1udFBVU29Zc3hna0hCbTFabWM5ZHp5YStTSXk1MjRiCllBMGNCSEIxcjR0TjJZRU1iQlMyMmFjREp0b2I0R2o2ejNadkw5RThKMjJuUkYydHVCczY4RFRmWlZjS1MrYXcKWXJGTEg5VWNqMUE4eHptL2psRTI1bTc4QjVkMjNBdW9pem9Jb0VCcGVuVWxmdlhKeENKR0ZkUnRzOU1COFM1VQpyTzV0VUI2a2dMd1YyczczZ0RPNzJHTGFMK0QxWGxtNExYNG0zc29rMlFjMjNwd3g2ZlpaZXY4ZExkQzFHNjBNCk5ieitFYWkyUVlkVjl2MExxTUpPTmFIOTJON0ozVTBXdnB1d3JSdG5Hc09CdkloRW5QSldON3JRSEkzRExjd1MKeGhpTlVlSHhhQnVBdDNKbXp6eWRKa2VtaS94bDlMYmw0c1IyVUVhR3dVOFlZUk5admppUEdVWGtxQkRFV3V3UwpyWStobG9ZWmFOQTZWMVBHRmVCcjZucUpCQU10eDh2WlBlUUJvRjc0K1ptMmFaRUE3SlE3Mzc4OWxxZFhnZHVpCnh5U2g4R2kzaGNhSDlBbzllaWU0SldXVUN4eFNtQ2hVblFvUENxS0VDcWV0dTJPVEQwVSt4WmdZczFRdFJXT24KTUhkOE9EekhaRzVucmU2KzZobURGMHZrYW9qbXFza0hhR0VYYVFpcis5R2hLUGxpM2pMdHlPVWtpRzF4RVJxagprd3RHWmJjYW54RzNxd29zMUVvNDQzcyt1Tjc5dHFEcFRvK0phVThjdHhDWkppeC9RR0paM0E1RDc1QmRjTldRCms1UmF6WjBPdXBuUFdDWldiQ0w1dzFOUUgvcTE1Q1JDd0lyRnBISDk4dUpqYmw1TzNiS2x4Tk91WndOZzMrci8KbUFYTkNWY1JmTG1WcTg0M09qNmRWV3BpdzErSGo0RzI2SEZZNWx0aE5rb1U3MVJUU0hyVjB2SnVGNURKTzdUWApsVU5uVG1MRzB5RkFmS0JRVnRVLzhldFk0a2Zsc3pvY0hpc2JJZVdZYjRPQ0cvVnY4bE5qc05CWlg3elUzQkVuCkVMTEZ4TGN4MVZaNnA2TDkyd0taTlZZaXloVDk1UGlreGRyZjlSSW40RFA2YlZKTk5rZm9idUhKcFBYNVhIVGIKZVNHNUUxUXNvWlI0aTNZRGZmUCtBQjQ3eU51eGVUOXdkMzl4by9HbEdmbFBpdUU1VE9uSTNHUXp3TGN1eW45awpCM09qNjBTaWNMN0dKNlY4ekZ5ZGhVZmYwOGZTUUFOOUpBQWcrTVViVE5DUlFRMUVkSHZaa1lvQ0xOSldWcHRsCjFhWWhqT21VZnZLc095SkI1YTB3d2ZVR2ptdGRNdlZmcEF0YlJyWDNPTXNNZ2hQN2VFbzk2emN2SEkxeFhKMm8KNlRWdGZUeGRLeFNJckhsaWdmWkZ1cmM3cGF5SDNHb2FDOWIyaHE1Vy9HY2I1KysxQTJEWmJRNGpldnpqUXFpOAp0Y1Y1RDhBOEFxVi9lbkFGY1ZWL0FYbTJMQmdyZXVqazFHNWRUYUEvTzFGZkROOXluZGljd28vcUdKeTF5bVMvClVtSGRUMGM2cjhnS3dCdWRxUEVGZnRzWnhFRUY2dXR2ZnlzVGc1SGlHVU11eWZGakU3N2dROEJOWlZvMG1YTWIKdzRqT0x3alBUZHBpRC9DVkhOWUdiU05vall5ZklzbHZEY0lva0VodnhOMndteGFpZ21KSVplV25hV3VoendiagpKZ3JNZURGVGJtUUNWQW5IWUh2dlVDbVVEdk9KYXFrem9wbGpieC9kdFMrUzBiNXNJNFdHWkdRQXdjRUNWNlNqCnlVV3d3cUNzOUFlZEEwRHpmZVk1MGU0ZnJtb2RDWVZ2dUtaa0pGSENEMVE0YlczS0RKUU5lb0VTbGhuem9abG0KU2ZvVEU0SkJHSGNYdDdod2NqNnVPR3JaOHhWeElpMUd6Ykl2M0QrY3hPSXdqSnZjdTBwZDNCNVdxc1FXTWRCbQo3K1NpcDBqaUdvKzRMWWZ0cDRSNk1VOFNQZ2RQdEhORkxlNDRJYkl4dlhVSzRCRGpqZTg2c0J4Ny9pTnJoYnpYCkJnTGFPbFAzMnpSSUtsV3pudkF0RWh5Q1k1RDliRzYvMmUxRk91Y3QxWW45ZDk0cStiazdvaEQzSVpKTDNBM00KNXVLdVhSaVFhMWZyYW9wdVRtdEpwTnJKWHg0MHJFMlUxLy9LTXpOWnhLNEZKWWdGZDZ2L2JKOGQyVmdPQUVVcwpZRmxYdDZXeStDMVZ4LzdDaWppMHppMlBhbW83QkVMMW9sc2MwemNuVThWM283clo5cTdLS0x4ZFN3VDVpWUMyCmNha1hYdWtYekNOM3pzc2hsSDdQaUJub1dXWnIvWkZOdTNadXI0Ulp2T2NwU01DY0w0b0FaSVFGdERkV245bTcKeVdFblhDcUE1TE84ZmdBTGUvTk8rL2J5aGRCcUNBdU1XQklFNVorSTZMOWp2Y0xhK0NsS0dvTVY0djFrVTgwTgpZVHpHV0g1bmVuSFdwOHhPZUs4VXVRZVFRTnZnODlZNCtlZzVXdm9xWXAxSXY2MzVvK0V6ZzFQUG00YlgvdXg2Ck45Wk9MU1pYSThleTlYZkh6Wkl4MlhOSEJRQjc4elBxcjRzOTFNbU83YktpVjRmZ0lxVHcvUnFNeGZHMWl1azAKSlpzd241SmJtQXYxV2lMN2ZvTGtHQVRKTkhKN3NUVjNlaU5DbUdRLzJJNEhORmNqZmVnL3dTMjkyd3RvU2ExUQpObUcvQ1ZhU25sQ0x1WmpYMkpjM0xtRWQ2Z0ZmemxQajJSNGxoclRXdmZWMnhCQ05HdGxMT004a3FwZUtSZGNJClpiSm1OWDlFeUNQNkQycC93L003T3pzenMvbmlKUVI2c1pudjZualRFaVM1V0tNSUp3OTlNT0t4ZEtkWWNxVlcKTlZqVFVWbEFGV0xJSkJMOGQ0QUt0VUJwM2ZSN3QwZjdIWDFBTVVYYmg3WDUyRTFZc2xqVWFYWmVKNmx1OU5yVApGT2pBU1E2R0VOWVMvcWRCTmVzM0RteC94bHdFdEV0aTd5blphL3dQbHZNVkRvZHl2M0RmWFErTUl0UXp3SVhkClV6cWlHTGhwMi9vcVR5WmFhN3FjKzlqMXNDWUliTHdWaGV5N0N0ZVlvQWZkZzRoOUZrV3hoZGhtT1VnVDJNUUYKZXg3WVV0V1pvclJleWtxdFlXdmtKM2Flckp2KzdycmF4Qlp0bS9VdldEekI0VFU4SDJvSXVMYTBVb3hiM2RoMgpkcnRwQzcwU3hQYm1OT0NJL0JtanJvNTFEdFVZdm03bDhJem16SDBjaE55VDZqTWlJcTNDRzdOWjlhbjBWMmtOCkwycUgyK0JBWWxIKzhrTkkrOXpzNFRLS0pRR0JweXBaWmtvM2Rza3dBMVYydXV2Tm5KTU8xNlA5WXovOWtrNS8Kc1FIVVFCZ1BDWFlvSXFOc3NNRndkNnFzbGxqaEtrQ3d0WG4wNmlUMlc1dTVRR2c0U1locDZFZ0pONnI4ZDV5VgowVndsV3RhS1N1U2EzYWxCbTFoSUlWL2NNdStuYzBVRTBiQXpQdTNsWHIwSW5GTFNYeGU5NWRCRU96S3JFclI5CmJBQWdtK0QrQ3p3ZXpKVnJjUlRHVUtzWHhTSlkrWFhSUnpQVngraklYbjAyRlNvSDhlUEUzZmw2S3RxNS9QbVYKTHNBOFcvQnV2Vk1EUUlSVDVPNGRIQmJLTTAyemIxRjI1N1Q0Y1lvckJmVVIvWkw1eVV2WU9QbUYxWE9EdXFGTgpiRzFVRVV2MzRXaXNJWnk2VnlHOWlQc3dYemp4NW0vWEprYnJBNUVYUXBpNzN3V0I4enNiaUVPUHRWcS94VExlCkNIbGZXRVVZdWNUZ0lqS0NkZ3RKNDlmRkd4VTU4bFIrL3N4N2hyMlA0dkJFM3dpYVFNSTN3V0RBcUIrRmxLSDAKQ0FkNlU3L3h4d2ZNQXR2WjNndXNWMlRFOWl4VHA1MFVRTm85STA4WElJcHZaSGswSWFBMUhOS2lVNlZnUG0wYgpNRTZXV0VRejgxYk1vVCtuZ2NMMUZ1dFBhNWZPUnhCbFNWektPNnd3UVlRYkNRU0JSNHRjbEQ5U3psNnI2dzQ1CmsxNE9wcXdhWHFKT1d0RHVBdkhhbVVTc3Z1b0RwaXZkSGtLcXFQb3pHaCswTHFIVEx3WUI4UDR4aWYrVTNvTlUKSmFReHRoWnl2azhFU2xvdTZib2ZPaHdNM0RlQkJKd1NEcVprbkJBSVVVN3NJK3Z0TTJKRTJCMXJHN3VXaUg5MgpYNXdxcU1Xc1BRb29nTEVjNkRaUE51Qm0wYXgyMWVVN3hvQll3NE9uZTBlLzhyREFEQ28rdUNOZ1h0NERGaDlEClE5djFEYlp6Y1hEMFNsU00wK3ZGVFV6amdxS3dSMWtib1NuTzFiMStBcGpBdnVzcjNMV0xsZENVUk93cVdBb1IKZ1VGTW9QZG1XSFVteHBkcDc5NnZTby91bUE1bUpCTE55dGFtYW5MaEx3WElOQkpNd3JreXZ5RW9WV0NDVWRUNApRTEEyWTQwZDJSUlpnWUhBUlZLOTN4U1M0UHhEeUZyWHBLek04cGxzSm10Ny9xVWVuZWpOUjlHZmpxTE5ML2FnCnRKY3YxWFhPdEs1NmtVT0hGVmZ0Wncxb2NnUlh1M1R4dkpjUUc0cGt4d3hXNFRVUXFCanVkZTYxa0p3SWdlS20KQXVyTEcvTnMyVG1kMGVBSHhPRFhpWE5WVkZFdXBtMi8zaWpjVGhUcHYyelYwbDd1QmE3YzFEMjhtM2ZyK1VTbgpQRTR0SnVISk5XZzhxWTJTUFQrQzc4VEFQNFFNdWFFYUJKNWt3ZGZBMFJTSzVsY0FPTmNveFpaRGpSaFpkYkZzCm0vTEhSMmNPMlZXS0R0bU5VQzk5R096dUU5aWhHN0tPYWNza3krRmdxY2l6NVMwR3hLTFJZZ1VTTklGMWJBcEoKRWpESVZRR1BPY2crdFZ2Q1lPbnZDSkpRQjBQZ0xnRUNqRDQ1Z082UjFDSE5pN1JQeXhMODlrNWQvRllBRUoyeQpRYnhCVUk1b1BBTjAvSVZsQytRLzZ5STJYQms4NkJ3QXlUbTBtdEVOYXpuVm1IUUpINTdmSEdzd0RJSTFkNzl4CkRiY1NnRDF5REo4dzM5LzRJVG9odzFFeEZSM3hKb0VyM1VqbVBMWEgrL1NDTDNyK1NHaWMxanVNbUo3bm53UFoKOWx5Z0N6eGFuSnZaOVVScURNZ2ZOT0hZdExnUGl4Wk5WdGVnZ3hKNnl3TnpjcEUyekk3WlhqT1VwMFpoaDVlSwpIdXlzQlR1NTVzaUNZdXFDczBWUWRId2hnMGcxUk0vOUcwU2VhN2FBRFFhS2l6Um1nNWtGYjdENmVQOFZIcG5GClQydkxMcm5CYWxtN01pOGgvYTNmQXA5NDNMWHF0dzhCZnFyMXpIek00THRKSHUwcnBUendjOThzSTl5V2xDaFUKQ3ZTNkFtSWJnREJWajVyc2hqMDRTMlZ5YlFPNzlpUDJwS1JWUThUWkMyVThhemRabFMyTm9kTW94QWI1VVJlMwpmU2lXVDRpSFY4RHpud05LRVhnc3IyZ1JTd2diYmpUV2xKcWtUNllqaDZQVEVBRFIxU1k2U3g4REdUTXFBNzFoCmdvRElrZzNOZ3JRL3Ivc2ZOanJubERVeUcrT1NLOWhZblo2RXk0NzBXWDBTQTFsNGhrZGF6c0pNa3o3Y24wWmkKMXpzaVYwZk5idmpZcWxFM0NGazV0YTZLUTJxaVk2dmxnaUNoWGV1RVhCND0K
  - secure: jIeL3QyZGeq/UzUx06jeU8WUpIgBtuJGVjdObsbvvs2vk9ZHlhd0C1UzXbNzEP7lFol+9AnDiXnNLHduItibelBrWlJjJABbXvOL2q8JHGOJVUPYKbzhlDocmHU1uttzRrQsFZDZOZI/pxZnzFZ0JC3syM+8LwIKoox+upN6otINaP8SBaZ/h9KUCZ+E7tjZov4XtvqXdLjRVGJkdCgvqhqND7wFomF0oEcBGfx5j62WSJO4yGTu+xXyKMHvkXTDFZwAsbZ6QAKoRJy8BZt+OOfgK4wvk/tJ2GcSMhQ+rgGDx89hrSYQE8yPKIqWAC3Y1qds7ffuvWHd68MccaqaDF4CoCnWOfbkAnQUtXMgZNV2bnaZBxRuehjpZRVa5aoUTkM3Y8qxFBJF/3VYH6mdTRHSHae84BlAHOYZvuu8HMWbaZZ5Dg6dPH+ci1BulGn7Ux5ScQPe3Y791q++rvQaxGW7PIzixB7pVp9oLUTakQsKrhoG/iZYtgXYEg5ERxwjYsAg6omYVuxeqt3WHXmhcf+cJsULaNznCrtq3+JGByLZVlzWWUPjf/u0Ller2mPnzRbNonN0M0RCFeS8F38uSdwnnZUd4n3EBQZWGkVKPEsT6ejq6vaMp0c/1tgNgUpecnry2VKNoizeiNikNdv7SrI6/i2t7d+zmOhuLpdFfug=
  - secure: Nm/HFe7JWtxTmACHl4AquthGCL4RRA+iI8vsJyqKLnBjgQCeuSXPcNaQ09dXNOpDWIZryGc22etFyqDO44Yf6NChJ1vKQ5kySDtAOLBVSvuw4hjgIqu6cY23vT/C1wGxgYTw8AZVNnU6wFm36M2WMwV602pzKfAq8mvytu01cC1MLyA4TRf2saMjepeEcojgjIO86scEFEZdY07nvaGirVU15wrVO7rX+sNYns3pT3NMdUqc+wt4wuD2+GrLMKrU1gEDoO9AOAg5M+tRFM23rAUIvsM0tF6pmRVAMKNggUV8gOeuT/EzubornKFSmEthnKyEj+EVs6zsJxOuOSYYbnNj+2lfeFtUW7i6DmWK4aSO4HapzlB5Dd1PmbxkbVg/bPnft1Jw74KErjP566AQn5gz25U+XA0cEeFypkGt4CLkez4ZqysQHfHl9bt4dEMwngnEHthPbyFOfPKWI7FehV/62+t1daBIIKecvE4VtRB0azuB6rzeHrdoG8lJrhosVwzGdazBsP0QD+r2gS6yo5Sx0LgZjWBybETRKNGQLvqi8/63rBkkCbKZt0W5cBJBuaoWl+YTT25yUaui/qPQOQW7ucbweWUYceZxi29TkxreIfyptmHSosgGLBEQli9JeLN6ywCN4OibaR3beYhNEndivG8rupicqopCSHkFHW8=
  - secure: FLm9AIneWcPiveffVKUEhCWS0xLKX9v5szkKXW0hSi4i0DIF1/njULly87vp23nipqZ6ouwmNYObLXfE599rNaEGPLKgWTMT3YOuSvvvwjmKPtXGQP708hnSszwY7FZ5IQNMmYxBQILxSSLwxCzyiUMagjmiQIKzWy0/nQlFBbCca80VOi6PJMflr3dHsa98mDKlMmvY7Kn2TKdRhPji1PJVwSimUJ7oXZUBmgzJJFm6nZHKdkZDUUcJ31Q14sSbo5k23LMT6CGgN2PuN9W/kraHTqEBTqONcyRfZRYRm4QqR7utkTJR1R632mvNJMIAf3kpXqgyxfoJlmQWzcO6XPRxgB4nOONo8YwcdWKs6sY/3O/b+9RDYUU+Nc43/Huvgz2r4z/lQrehr/mADOHcTWS5pnsidk2EjB8PJHAVeDb5FX4/CFuWWRJieaME2hCAnqlFKIVHdF4IZQgfvN89va7BLaDBjMbayN3i5q0eUObnGnPq7ANvVILqEa9ABtF/zqeTd9FgltGqDMWpH0hgBz8X/4n+Q+yNPIcDMRjLyAyf0o4TGVMHwS6gm+3uRUAyxp7R3OfciRy/qG+Ii5ro81pOkEyu4Ftuy/FGmtjwcxMEMIBObH6PsCbATW39qh7RgSThJ20cYVANVfYcchcNGXZr+o4TghBYaBNbGA6SG/A=
  - secure: MCM0AuPydK7VSU3PIM+iX2G3ndPbRFahXNYTWoeIQIY3chEd/y6bcPfaPLv1B86Q7TT0UqFPF2Td1LfC79MkSRoCgb6IuXWzkht4FzKAZf/hpQf4Pr6ceKUnaIWdXD+y/LLrHtOOgDZm4RJWsJ8DyOXaSNRYR3BSKQC8jUN2yk8d4XTNw9QixL4rnxGf5W7MnynEtrC6Ox0xfOSZJDt1XmEjz9NJrpE/fE9jDZi5EK3ROB0OsShPP14IBo118mvyORObAfwxzt4sCdG2K50mi6tOmJ+0aTcljnp8iapKJEocu+1h63EgXEJ8kMzRhrwMYzA4PV23RFd0tPwXR54gIP2psflG6VAheImGKmVI4E+1Izmn2JaNPhQQBqUb2trxFA7s9YSZWSOrU5AD1NM2YDTgXMNb5Km//ALnvYnykoZ4eVUZf+IuZsfIJFF3Q0At9uzAYbhU1glKiwHQefdhPLlz/Uo9PXlrV4IAW+fqogbS5ZSzrBMVMgt3Sl/fbpQUi4MFGpk2VhPuQATams0xr9zyuguZ2P5vCtg8ddmH29L8gflRybfX4MwilvO5GjwSFZjao/eMnH4G3HbZbRPXNeuqRqYTP9ZmxIg13h3D/XkmiD3FCa6FGTgQhsuhvWNx0m+XfV8sLR9duZI8u2UuZe+95nBfYxo7prVRkFF+hDc=
  - secure: EDh1VtwkX32LGPmNeFy4mOeDLhFlKS8NtDoYRfXANzSLpZV8agAl5clC6NvEcHIo41sKiXmLB7XXrKobvadWHJr5WfisJVfZB3mWSFMb+CffghuIUcPLmVNd34nv2pEb0fEwj//aP4jLpa0XTqEhv9bO8WZMxI484BM0TNfaLQPw1xTHcKCQD3QlP5zPIh5A5Yc6wmmVrCwaE6tQygb27Qs2x6bqcOGcTXG71xTMUYjt/w5KdfkGABIJyYSdJrn9OCdYNCEGJnD6/qLArZE1wn+aaKMgC3BMXzjjfsbeVgIkelTldAS8OIwJ3moD4/04Bm+wYhsOyDVyCpUKW2HvP0ARRLh5AGdcVMwYvem90eyXnlnTnjEOnyZxXoA8qaWFFbyg4dKu8FAoR7UTuohZgsPxn6zG2ZNL/7y+CF9ABtZDchOvBFD0erLvBhFh/nuHkiYQN+VOBxTzaLW05FLf5lK/cFJDJYpqa6wyizFHVB5gxFxFQTuBsiSQCGE2Rvq3rYNtWjFD/OhV8QP66lzoHVUO14nVgevbsLI+4JqatTf8iF2qHpk++AqLvfj/j/2TMrZawIn9rYzOVZWm0z9fcGOsNGlmCXoXBOon+0RT2oEN9KQjLLhv7JZVmNa98CEi/JXfNVZqxixvVZVf3hlFpFWp38xk7kEzdAiep5nRWQY=
  - secure: GJ0M84eB2OiprgwDaIyR+K3f3lvqtnjJzPsvuBjqUMD7mtKS81N9fo0CsCUqO1ZYViVYuLl90EeYF2vFb7vsoAVyTGqTmx3/2mLmSxQL5EvdwrZxAcXfIW963HzNz1qGNXACSs5ZQZEeDWY5VdKQZKnCBk1VlmQjmzXNdlzBtak5TRhwZhI2RanqDcTpJs+Z4jgiGL6oh0dhqfmzwamTT+Oh2ct7YUm3+untdJrYzl3VV4/wklyeck0oo5Ll30Ng0B3gQzXTboltl/y2JDeBy3QueAXNQ8qugOG7XDi1wnLKdqoL7tQ7ofseXE5+N7j3YkMe5E97V2GUkln+P8e9q/kgUsc+63qkN830GeWMIeMaP/Pb0l5SNi81IxX6lTGW1VMICiCyC/xPFO++rU2mppHcWFUshS5dslctCYcnF2OX+CJ+gUlT6lAGPyoX4PXYwErJnm56ImJwWQwE1hdIm/lobJ3pOdJmiWphvXPvofPR0LrNvcQJu1wI38bLskiQXDYCELWfUkV57YzVoLm4nBUOIqU0ePeWc7jB5bfmKV4pht7+G2jGyH3M7vKtjvAsZrXbwDZZc/aJ2n1C7vyigCuNcuOBLvayTVo6SA9ZL9zx1AbQWkRYEQsCr/NsD7btLaYSQkjPyJcuoDyO33RtB8lPJtGJSA6tjs01FrHxBgo=
  - secure: jAZSuuDvdq275iCI9uzkpshXHrJYLowXU1N1BxN42KLZl4dlmj5o9GMOp8t+yBPbukIhbzrkPGyer14/LaBgxPc+lLk3zM8KMPtdAVSm6hYT0Ot6IC0QvyX+0VG85mSYFULDBUd+gm9rYNAS4thV68WHLELNEkjcwRLolluBeTQQSqS1IVpF0201spyh7od/bA/+yh/SB5s0z93L8oglAfSr/682tKhOOR8KVmCV/0Yg/HYI0hbY3aoHWFd7foxoXYErvycEJ6JrxuD3Klh77mRZ87NXXOI7a8Bxa5Oaj4A/56GauJYRPs7bCaPTQxWPbv6NH3NAqHPd1i4W/5xEk+ECaqkW/aP8dn9J7Y1K0dZg1Eyg+WQySVnNqByyFtDweARhg9/j8LwZhGLJ89Dn15lIF6knAxlvr4ANDI8VVXpfClYs8NTtY87VGd9v/y8ctrF/9sESRbZEWJpfP5BdECYbyZ6j4QhCoHaB9cQ7zr4Fd0DROSdIhwPc9NLJ9aPS+KQvCkCu1Z7DEtYsvqQp+SO2DT/I9RkKvZ8xz0jDAq9y5GGCQ9WXtY7ne35AydpRHFqR6PiSGNZFS4WFwtk7Len2hLawCfUQB3CL1PPGyPHhtDfTbsmsd3zUgRJ1dPrQvzEIsa/uj3Dv2YAC3i9YMlPfGpdxiRA49Xz6IB5RLVk=
